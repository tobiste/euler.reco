% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/euler_solution.R
\name{euler_solution}
\alias{euler_solution}
\title{Euler pole solution for geological structures}
\usage{
euler_solution(x, sm = TRUE, densify.x = FALSE, ...)
}
\arguments{
\item{x}{either a \code{matrix} or \code{data.frame} containing the geographical coordinates,
or a \code{sf} object.}

\item{sm}{logical. Whether the structure described by the points \code{x} is
expected to follow small (\code{TRUE}) or great circle (\code{FALSE}) arcs?}

\item{densify.x}{logical. Whether the points \code{x} along the lines structure
should be densified before analysis (\code{TRUE}) or not (\code{FALSE}, the default).
Densification would yield equally spaced points along the line.}

\item{...}{optional arguments passed to \code{\link[smoothr:densify]{smoothr::densify()}}
(only if \code{densify.x = TRUE}).}
}
\value{
numeric vector given the latitude (in degrees), longitude (in degrees), the misfit (0 - low, 1 - high),
and (for small circle structures) the apical angle (in degrees) of the best fit Euler pole.
}
\description{
Finds the best Euler pole solution for a set of geographic locations that
are aligned along a geological structure.
}
\details{
Based on Gray, N.H., Geiser, P.A., Geiser, J.R. (1980). On the least-square
fit of small and great circles to spherically projected data. Mathematical
Geology, Vol. 12, No. 3, 1980
}
\examples{
test <- smallcircle(30, 150, 35)
euler_solution(test)

# Example from Price and Carmicheal (1986), GEOLOGY:

# from matrix
rmt_mat <- rbind(
  "yukon" = c(66.1, -147.8),
  "bigbend" = c(52.25, -122.65),
  "washington" = c(47.85, -121.85)
)
euler_solution(rmt_mat)

# from data.frame
rmt_df <- data.frame("lat" = rmt_mat[, 1], "lon" = rmt_mat[, 2])
euler_solution(rmt_df)

# from sf object
rmt_sf <- sf::st_as_sf(rmt_df, coords = c("lon", "lat"), crs = "WGS84")
euler_solution(rmt_sf)

data(tintina)
euler_solution(tintina)
euler_solution(tintina, densify.x = TRUE)

data(south_atlantic)
euler_solution(south_atlantic, sm = TRUE)
euler_solution(south_atlantic, densify.x = TRUE, sm = TRUE)
}
