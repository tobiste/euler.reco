[{"path":"https://tobiste.github.io/euler.reco/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 euler.reco authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tobiste.github.io/euler.reco/articles/intro.html","id":"data-import","dir":"Articles","previous_headings":"","what":"Data import","title":"euler.reco","text":"data used approximation can geological structure. Either geographic coordinates structures vertices (matrix data.frame), import structure shape file (spatial file formats) via sf::read_sf(). example dataset, .e. trace Tintina Fault Rocky Mountain Trench Canadian Cordillera, giving sf object.","code":"data(\"tintina\") tintina #> Simple feature collection with 2 features and 3 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -154.3776 ymin: 49.76629 xmax: -115.2748 ymax: 66.01703 #> Geodetic CRS:  WGS 84 #>   Id                  Name       Type                       geometry #> 1 20 Rocky Mountain Trench NS dextral MULTILINESTRING ((-126.4191... #> 2 21         Tintina Fault SS dextral MULTILINESTRING ((-154.3776..."},{"path":"https://tobiste.github.io/euler.reco/articles/intro.html","id":"find-and-evaluate-the-best-fitting-small-or-circle-for-the-geological-structure","dir":"Articles","previous_headings":"","what":"Find and evaluate the best-fitting small or circle for the geological structure","title":"euler.reco","text":"best fit small circle can retrieved euler_solution(). example, structure represents strike-slip fault , thus, expected follow small-circle trajectory Euler pole approximated. Thus, set sc argument TRUE order calculate small circle fitting structure: function returns coordinates best fit axis centered small circle small circles angle. Furthermore, returns misfit value, .e. residual least squares sum vectors. misfit \\(0.004\\) reflecting good fit. good approximation structure small circle low deviation structure small circle (data_deviation()). distributions deviations can evaluated : example, dispersion deviation angles zero deviation (perfect fit) low. zero deviation within 95% confidence interval indicated mean \\(\\pm\\) confidence angle. Rayleigh test also performed, alternative hypothesis data (circularly) normally distributed around 0. null hypothesis rejected alternative can accepted.","code":"res <- euler_solution(tintina, sc = TRUE) res #>           lat           lon         angle        misfit  #>  2.508365e+01 -1.598391e+02  4.111992e+01  4.440427e-03 data_deviation(tintina, res) |>   deviation_stats() #>          mean        sd          var        disp      CI95         min      max #> 1 0.002152623 0.9259888 0.0001305894 6.52961e-05 0.1100502 0.002049965 1.138149 #>   Rayleigh.test      p.value #> 1     0.9998694 1.158596e-29"},{"path":"https://tobiste.github.io/euler.reco/articles/intro.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"euler.reco","text":"solution can quickly visualized :  Mercator projection can also transformed oblique Mercator projection approximated Euler pole top map. coordinate system small great circles horizontal vertical lines, respectively. example, structure strike-slip fault, .e. small circle structure. Thus expect, structure nearly horizontal reprojection:","code":"quick_plot(tintina) quick_plot(tintina, proj = \"omerc\")"},{"path":"https://tobiste.github.io/euler.reco/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://tobiste.github.io/euler.reco/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan T (2024). euler.reco: Euler pole Reconstruction. R package version 0.2.0.","code":"@Manual{,   title = {euler.reco: Euler pole Reconstruction},   author = {Tobias Stephan},   year = {2024},   note = {R package version 0.2.0}, }"},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"eulerreco","dir":"","previous_headings":"","what":"Euler pole Reconstruction","title":"Euler pole Reconstruction","text":"Algorithms find evaluate Euler pole solution describing orientation geological structures","code":""},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"method","dir":"","previous_headings":"","what":"Method","title":"Euler pole Reconstruction","text":"small circle best fit corresponding Euler pole (axis) rotation array points established treating point locus unit vector center Earth minimizing sums squares deviations unit vectors circular cone surface apex center Earth (Ramsay, 1967, p. 20-21).","code":""},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Euler pole Reconstruction","text":"must R installed system (see http://r-project.org). install euler.reco Github, also need remotes package. can installed typing following code R command line prompt:","code":"install.packages(\"remotes\")"},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Euler pole Reconstruction","text":"recent development version euler.reco available Github can installed system follows:","code":"remotes::install_github('tobiste/euler.reco') library('euler.reco')"},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Euler pole Reconstruction","text":"detailed documentation can found https://tobiste.github.io/euler.reco/","code":""},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Euler pole Reconstruction","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite","title":"Euler pole Reconstruction","text":"…","code":""},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Euler pole Reconstruction","text":"MIT License","code":""},{"path":"https://tobiste.github.io/euler.reco/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Euler pole Reconstruction","text":"Ramsay, J. G. (1967). Folding fracturing rocks. McGraw-Hill Book Company, New York Gray, N.H., Geiser, P.., Geiser, J.R. (1980). least-square fit small great circles spherically projected data. Mathematical Geology, 12(3) Kroner, U., Roscher, M., Romer, R. L. (2016). Ancient plate kinematics derived deformation pattern continental crust: Paleo- Neo-Tethys opening coeval prolonged Gondwana–Laurussia convergence. Tectonophysics. 681, 330-233. https://doi.org/10.1016/j.tecto.2016.03.034 Wdowinski, S. (1998). theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103(3), 5037–5059. http://dx.doi.org/10.1029/97JB03390 Price, R. & Carmicheal, D. (1986). Geometric test Late Cretaceous-Paleogene intracontinental transform faulting Canadian Cordillera. Geology, 468, 14(6), 468-471. doi: 10.1130/0091-7613(1986)14<468:GTFLCI>2.0.CO;2","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian and geographic coordinates — coordinates","title":"Cartesian and geographic coordinates — coordinates","text":"Convert two coordinate systems","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian and geographic coordinates — coordinates","text":"","code":"geographical_to_cartesian2(x)  cartesian_to_geographical2(x)"},{"path":"https://tobiste.github.io/euler.reco/reference/coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian and geographic coordinates — coordinates","text":"x matrix containing coordinates","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cartesian and geographic coordinates — coordinates","text":"matrix transformed coordinates","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/data_deviation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation of input data from Euler pole solution — data_deviation","title":"Deviation of input data from Euler pole solution — data_deviation","text":"Calculates angular distance input points small great circle Euler pole solution","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/data_deviation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation of input data from Euler pole solution — data_deviation","text":"","code":"data_deviation(x, ep, sm = TRUE)"},{"path":"https://tobiste.github.io/euler.reco/reference/data_deviation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation of input data from Euler pole solution — data_deviation","text":"x either matrix data.frame containing geographical coordinates, sf object. ep three column vector. Euler pole solution sm logical. Whether solution small circle great circle geometries.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/data_deviation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation of input data from Euler pole solution — data_deviation","text":"numeric (angle degrees). Angular difference data points small great circle.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/data_deviation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deviation of input data from Euler pole solution — data_deviation","text":"","code":"data(tintina) res1 <- euler_solution(tintina) data_deviation(tintina, res1) #>  [1]  0.496405362  0.605133187  0.693854551  0.737723380  0.723030390 #>  [6]  0.704650018  0.662972237  0.491606121  0.437316075  0.421862797 #> [11]  0.390430783  0.358409151  0.495925555  0.362508124  0.263592215 #> [16]  0.146776241  0.086000870 -0.072237351 -0.108031756 -0.179054424 #> [21] -0.169412665 -0.298109247 -0.595997279 -0.963922843 -1.048347651 #> [26] -1.111203709 -1.138149360 -1.112120562  0.569581949  0.261327105 #> [31]  0.322477458  0.162888184 -0.092539972 -0.204082124 -0.547749422 #> [36] -0.579556234 -0.555452691 -0.536205084 -0.455176780 -0.456026400 #> [41] -0.392161774 -0.376711600 -0.309269856 -0.253069456 -0.108795921 #> [46] -0.084591199 -0.002049965 -0.018899895 -0.027727967 -0.025067534 #> [51] -0.022323854 -0.018840586 -0.004289172 -0.010429215 -0.023355380 #> [56] -0.039515097 -0.046770545 -0.040274204 -0.054363245 -0.011308925 #> [61]  0.153767873  0.282488525  0.333392145  0.356611565  0.373259185 #> [66]  0.396062428  0.452937764  0.495703340  data(south_atlantic) res2 <- euler_solution(south_atlantic) data_deviation(south_atlantic, res2) #>  [1] -0.1566025298  0.1357934338  0.1421647535  0.0512709308  0.0191809264 #>  [6]  0.0094475915 -0.0008121112 -0.0864417126 -0.1985551298 -0.1508811708 #> [11]  0.0320651336  0.2042653645"},{"path":"https://tobiste.github.io/euler.reco/reference/deviation_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of deviation angles — deviation_stats","title":"Distribution of deviation angles — deviation_stats","text":"Mean deviation, standard deviation, variance, dispersion zero deviation, 95% confidence angle, minimum maximum absolute deviation angles, test results Rayleigh test specified mean (.e. zero deviation).","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/deviation_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of deviation angles — deviation_stats","text":"","code":"deviation_stats(x)"},{"path":"https://tobiste.github.io/euler.reco/reference/deviation_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of deviation angles — deviation_stats","text":"x numeric. Misfit angles degrees","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/deviation_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of deviation angles — deviation_stats","text":"data.frame giving mean misfit angle, standard deviation, dispersion 0 degrees, 95% confidence angle, minimum maximum absolute angles, V2 test results (alternative hypothesis unimodal distribution around 0 degrees)","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/deviation_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution of deviation angles — deviation_stats","text":"","code":"data(tintina) res <- euler_solution(tintina) m <- data_deviation(tintina, res) deviation_stats(m) #> Reject Null Hypothesis #>          mean        sd          var        disp      CI95         min      max #> 1 0.002152623 0.9259888 0.0001305894 6.52961e-05 0.1100502 0.002049965 1.138149 #>   Rayleigh.test      p.value #> 1     0.9998694 1.158596e-29"},{"path":"https://tobiste.github.io/euler.reco/reference/ep_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for euler pole solution — ep_help","title":"Helper functions for euler pole solution — ep_help","text":"Helper functions euler pole solution","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/ep_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for euler pole solution — ep_help","text":"","code":"ep_from_sc(x)  ep_from_gc(x)"},{"path":"https://tobiste.github.io/euler.reco/reference/ep_help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for euler pole solution — ep_help","text":"x matrix","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/ep_stereo_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Stereographic projection centered in Euler pole — ep_stereo_crs","title":"Stereographic projection centered in Euler pole — ep_stereo_crs","text":"Stereographic projection centered Euler pole","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/ep_stereo_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stereographic projection centered in Euler pole — ep_stereo_crs","text":"","code":"ep_stereo_crs(x)"},{"path":"https://tobiste.github.io/euler.reco/reference/ep_stereo_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stereographic projection centered in Euler pole — ep_stereo_crs","text":"x two-element vector data.frame specifying latitude longitude projections center.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/ep_stereo_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stereographic projection centered in Euler pole — ep_stereo_crs","text":"sf::crs() object","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/ep_stereo_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stereographic projection centered in Euler pole — ep_stereo_crs","text":"","code":"ep_stereo_crs(c(45, 10)) #> Coordinate Reference System: #>   User input: +proj=stere +lat_0=45 +lat_0=10  #>   wkt: #> PROJCRS[\"unknown\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     CONVERSION[\"unknown\", #>         METHOD[\"Stereographic\"], #>         PARAMETER[\"Latitude of natural origin\",45, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8801]], #>         PARAMETER[\"Longitude of natural origin\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8802]], #>         PARAMETER[\"Scale factor at natural origin\",1, #>             SCALEUNIT[\"unity\",1], #>             ID[\"EPSG\",8805]], #>         PARAMETER[\"False easting\",0, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8806]], #>         PARAMETER[\"False northing\",0, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8807]]], #>     CS[Cartesian,2], #>         AXIS[\"(E)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(N)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]]"},{"path":"https://tobiste.github.io/euler.reco/reference/euler.reco.html","id":null,"dir":"Reference","previous_headings":"","what":"library(euler.reco) — euler.reco","title":"library(euler.reco) — euler.reco","text":"Algorithm find evaluate Euler pole solution describing orientation geological structures","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/euler.reco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"library(euler.reco) — euler.reco","text":"list documented functions may viewed typing help(package='euler.reco'). documentation demonstration shown vignette typing vignette('intro', package = \"euler.reco\")","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/euler_solution.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler pole solution for geological structures — euler_solution","title":"Euler pole solution for geological structures — euler_solution","text":"Finds best Euler pole solution set geographic locations aligned along geological structure.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/euler_solution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler pole solution for geological structures — euler_solution","text":"","code":"euler_solution(x, sc = TRUE, densify.x = FALSE, ...)"},{"path":"https://tobiste.github.io/euler.reco/reference/euler_solution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler pole solution for geological structures — euler_solution","text":"x either matrix data.frame containing geographical coordinates, sf object. sc logical. Whether structure described points x expected follow small (TRUE) great circle (FALSE) arcs? densify.x logical. Whether points x along lines structure densified analysis (TRUE) (FALSE, default). Densification yield equally spaced points along line. ... optional arguments passed smoothr::densify() (densify.x = TRUE).","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/euler_solution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler pole solution for geological structures — euler_solution","text":"numeric vector given latitude (degrees), longitude (degrees), misfit (0 - low, 1 - high), (small circle structures) apical angle (degrees) best fit Euler pole.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/euler_solution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Euler pole solution for geological structures — euler_solution","text":"Based Gray, N.H., Geiser, P.., Geiser, J.R. (1980). least-square fit small great circles spherically projected data. Mathematical Geology, Vol. 12, . 3, 1980","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/euler_solution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler pole solution for geological structures — euler_solution","text":"","code":"test <- smallcircle(30, 150, 35) euler_solution(test) #>          lat          lon        angle       misfit  #> 3.000000e+01 1.500000e+02 3.500000e+01 5.780875e-11   # Example from Price and Carmicheal (1986), GEOLOGY:  # from matrix rmt_mat <- rbind(   \"yukon\" = c(66.1, -147.8),   \"bigbend\" = c(52.25, -122.65),   \"washington\" = c(47.85, -121.85) ) euler_solution(rmt_mat) #>           lat           lon         angle        misfit  #>  4.169012e+01 -1.560717e+02  2.484264e+01  3.182561e-29   # from data.frame rmt_df <- data.frame(\"lat\" = rmt_mat[, 1], \"lon\" = rmt_mat[, 2]) euler_solution(rmt_df) #>           lat           lon         angle        misfit  #>  4.169012e+01 -1.560717e+02  2.484264e+01  3.182561e-29   # from sf object rmt_sf <- sf::st_as_sf(rmt_df, coords = c(\"lon\", \"lat\"), crs = \"WGS84\") euler_solution(rmt_sf) #>           lat           lon         angle        misfit  #>  4.169012e+01 -1.560717e+02  2.484264e+01  3.182561e-29   data(tintina) euler_solution(tintina) #>           lat           lon         angle        misfit  #>  2.508365e+01 -1.598391e+02  4.111992e+01  4.440427e-03  euler_solution(tintina, densify.x = TRUE) #>           lat           lon         angle        misfit  #>   24.65028141 -160.15652881   41.62510809    0.04028761   data(south_atlantic) euler_solution(south_atlantic, sc = TRUE) #>           lat           lon         angle        misfit  #> -6.040911e+01  1.449658e+02  6.012862e+01  5.442767e-05  euler_solution(south_atlantic, densify.x = TRUE, sc = TRUE) #>           lat           lon         angle        misfit  #> -5.973840e+01  1.456660e+02  5.940073e+01  3.309771e-04"},{"path":"https://tobiste.github.io/euler.reco/reference/geo_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution of spherical coordinates — geo_stats","title":"Distribution of spherical coordinates — geo_stats","text":"Statistics distribution geographic locations","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/geo_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution of spherical coordinates — geo_stats","text":"","code":"geo_stats(x)"},{"path":"https://tobiste.github.io/euler.reco/reference/geo_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution of spherical coordinates — geo_stats","text":"x either matrix data.frame containing geographical coordinates, sf object.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/geo_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution of spherical coordinates — geo_stats","text":"three-element vector giving mean geographic location, standard deviation variance.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/geo_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution of spherical coordinates — geo_stats","text":"","code":"xy <- cbind(lat = c(12, 14, 16), lon = c(-179, 179, 177)) geo_stats(xy) #>          lat          lon        delta          var  #> 1.400546e+01 1.790116e+02 2.275024e+00 7.882055e-04"},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Euler pole solution — quick_plot","title":"Plot the Euler pole solution — quick_plot","text":"Creates simple ggplot show best fit small/great circle, data's misfit solution statistics solution.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Euler pole solution — quick_plot","text":"","code":"quick_plot(   x,   sc = TRUE,   densify.x = FALSE,   ...,   proj = c(\"geo\", \"omerc\", \"stereo\"),   expand = c(0, 0) )"},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Euler pole solution — quick_plot","text":"x either matrix data.frame containing geographical coordinates, sf object. sc logical. Whether structure described points x expected follow small (TRUE) great circle (FALSE) arcs? densify.x logical. Whether points x along lines structure densified analysis (TRUE) (FALSE, default). Densification yield equally spaced points along line. ... optional arguments passed smoothr::densify() (densify.x = TRUE). proj character. Whether plot shown geographic Mercator projection (\"geo\", default), oblique Mercator projection Euler pole North (\"omerc\"), stereographic projection centered Euler pole (\"stereo\"). expand numeric two element vector.  expand map limits latitude longitude (c(0, 0) (degrees) default)","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the Euler pole solution — quick_plot","text":"","code":"data(tintina) quick_plot(tintina)  quick_plot(tintina, proj = \"omerc\")   data(south_atlantic) quick_plot(south_atlantic)  quick_plot(south_atlantic, proj = \"omerc\")  quick_plot(south_atlantic, proj = \"stereo\")"},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Euler pole solution (ggplot2) — quick_plot_gg","title":"Plot the Euler pole solution (ggplot2) — quick_plot_gg","text":"Creates simple ggplot show best fit small/great circle, data's misfit solution statistics solution.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Euler pole solution (ggplot2) — quick_plot_gg","text":"","code":"quick_plot_gg(   x,   sc = TRUE,   densify.x = FALSE,   ...,   proj = c(\"geo\", \"omerc\", \"stereo\"),   expand = c(1, 1) )"},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Euler pole solution (ggplot2) — quick_plot_gg","text":"x either matrix data.frame containing geographical coordinates, sf object. sc logical. Whether structure described points x expected follow small (TRUE) great circle (FALSE) arcs? densify.x logical. Whether points x along lines structure densified analysis (TRUE) (FALSE, default). Densification yield equally spaced points along line. ... optional arguments passed smoothr::densify() (densify.x = TRUE). proj character. Whether plot shown geographic Mercator projection (\"geo\", default), oblique Mercator projection Euler pole North (\"omerc\"), stereographic projection centered Euler pole (\"stereo\"). expand numeric two element vector.  expand map limits latitude longitude (c(0, 0) (degrees) default)","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/quick_plot_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the Euler pole solution (ggplot2) — quick_plot_gg","text":"","code":"data(tintina) quick_plot_gg(tintina)  quick_plot_gg(tintina, proj = \"omerc\")   data(south_atlantic) quick_plot_gg(south_atlantic)  quick_plot_gg(south_atlantic, proj = \"omerc\")  quick_plot_gg(south_atlantic, proj = \"stereo\")"},{"path":"https://tobiste.github.io/euler.reco/reference/smallcircle.html","id":null,"dir":"Reference","previous_headings":"","what":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","title":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","text":"Creates small circle (spherical cone) specifying axis half apical angle","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/smallcircle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","text":"","code":"smallcircle(lat, lon, angle = 90, n = 1000L)"},{"path":"https://tobiste.github.io/euler.reco/reference/smallcircle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","text":"lat numeric. Latitude Euler pole (degrees) lon numeric. Longitude Euler pole  (degrees) angle numeric. Angle small circle (half apical angle spherical cone). angle = 90, great circle returned. n integer. resolution return. Amount points along small circle (1000 default).","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/smallcircle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","text":"sf object","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/smallcircle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","text":"#' @rdname coordinates acoscartesian_to_geographical <- function(x)  cartesian_to_geographical2( structr:::acoscartesian_to_cartesian(x) ) Small circle around given pole","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/smallcircle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"#' @rdname coordinates geographical_to_acoscartesian <- function(x) structr:::cartesian_to_acoscartesian( geographical_to_cartesian2(x) ) — smallcircle","text":"","code":"smallcircle(45, 10, 12.3) #> Simple feature collection with 1 feature and 0 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -7.533913 ymin: 32.70005 xmax: 27.53391 ymax: 57.3 #> Geodetic CRS:  WGS 84 #>                         geometry #> 1 LINESTRING (10 57.3, 9.8579..."},{"path":"https://tobiste.github.io/euler.reco/reference/south_atlantic.html","id":null,"dir":"Reference","previous_headings":"","what":"South Atlantic — south_atlantic","title":"South Atlantic — south_atlantic","text":"example data set transform fault crossing South Atlantic ridge","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/south_atlantic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"South Atlantic — south_atlantic","text":"","code":"data('south_atlantic')"},{"path":"https://tobiste.github.io/euler.reco/reference/south_atlantic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"South Atlantic — south_atlantic","text":"object class sf","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/south_atlantic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"South Atlantic — south_atlantic","text":"","code":"data(\"south_atlantic\") head(\"south_atlantic\") #> [1] \"south_atlantic\""},{"path":"https://tobiste.github.io/euler.reco/reference/tintina.html","id":null,"dir":"Reference","previous_headings":"","what":"Tintina fault — tintina","title":"Tintina fault — tintina","text":"example data set","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/tintina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tintina fault — tintina","text":"","code":"data('tintina')"},{"path":"https://tobiste.github.io/euler.reco/reference/tintina.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tintina fault — tintina","text":"object class sf","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/tintina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tintina fault — tintina","text":"","code":"data(\"tintina\") head(\"tintina\") #> [1] \"tintina\""},{"path":"https://tobiste.github.io/euler.reco/reference/to_geomat.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographical coordinate matrix — to_geomat","title":"Geographical coordinate matrix — to_geomat","text":"Creates coordinates matrix format","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/to_geomat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographical coordinate matrix — to_geomat","text":"","code":"to_geomat(x)"},{"path":"https://tobiste.github.io/euler.reco/reference/to_geomat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographical coordinate matrix — to_geomat","text":"x either matrix data.frame containing geographical coordinates, sf object.","code":""},{"path":"https://tobiste.github.io/euler.reco/reference/to_geomat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographical coordinate matrix — to_geomat","text":"matrix transformed coordinates","code":""},{"path":"https://tobiste.github.io/euler.reco/news/index.html","id":"eulerreco-020","dir":"Changelog","previous_headings":"","what":"euler.reco 0.2.0","title":"euler.reco 0.2.0","text":"bug fix quick_plot() online documentation added","code":""},{"path":"https://tobiste.github.io/euler.reco/news/index.html","id":"eulerreco-010","dir":"Changelog","previous_headings":"","what":"euler.reco 0.1.0","title":"euler.reco 0.1.0","text":"Initial CRAN submission.","code":""}]
